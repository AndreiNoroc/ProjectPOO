Starting audit...
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12:24: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12:32: Parameter contractLength should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12:52: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12:71: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:12:102: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:20:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:24:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:24:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:28:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:32:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:32:35: Parameter contractLength should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:36:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:40:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:40:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:44:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:48:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:48:46: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:52:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:56:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:56:42: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:60:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:62:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:63:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:64:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:65:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:66:76: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/Distributor.java:67:68: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:15:27: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:15:35: Parameter budget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:15:47: Parameter isBankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:15:67: Parameter contracts should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:22:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:26:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:26:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:30:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:34:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:34:27: Parameter budget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:38:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:42:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:42:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:46:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'getContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'getContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:50:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'setContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'setContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:50:30: Parameter contracts should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:54:5: Class 'OutDistributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutDistributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:56:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:57:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:58:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:59:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/distributor/OutDistributor.java:60:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:14:26: Parameter newConsumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:14:60: Parameter costsChanges should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:19:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'getNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'getNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:23:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'setNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'setNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:23:33: Parameter newConsumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:27:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'getCostsChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'getCostsChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:31:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'setCostsChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'setCostsChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:31:33: Parameter costsChanges should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:35:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:37:33: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:38:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/update/MonthlyUpdate.java:39:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11:25: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11:33: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11:52: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11:71: Parameter priceDistr should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:11:87: Parameter contractLen should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:20:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:24:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:24:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:28:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:32:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:32:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:36:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'getMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'getMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:40:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:40:34: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:44:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'getPriceDistr' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'getPriceDistr' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:48:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setPriceDistr' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setPriceDistr' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:48:31: Parameter priceDistr should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:52:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'getContractLen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'getContractLen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:56:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setContractLen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setContractLen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:56:32: Parameter contractLen should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:60:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:64:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:64:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:68:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'setActual' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'setActual' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:73:5: Class 'CalcConsumer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcConsumer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:75:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:76:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:77:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:78:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcConsumer.java:79:49: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15:28: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15:36: Parameter contractLength should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15:56: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15:75: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:15:106: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:26:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:30:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:30:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:34:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:38:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:38:35: Parameter contractLength should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:42:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:46:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:46:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:50:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:54:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:54:46: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:58:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:62:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:62:42: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:66:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getFinalPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getFinalPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:70:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setFinalPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setFinalPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:70:31: Parameter finalPrice should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:74:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'getClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'getClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:78:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:78:28: Parameter clients should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:82:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:86:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:86:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:90:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setContractPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setContractPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:91: Line is longer than 100 characters (found 183). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:91:153: '0.2' is a magic number. [MagicNumber]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:94:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'setActualBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'setActualBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:95: Line is longer than 100 characters (found 153). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:95:69: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:98:5: Class 'CalcDistributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CalcDistributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:100:35: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:101:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:102:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:103:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:104:76: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:105:68: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/transformdata/CalcDistributor.java:106:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:10:24: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:10:32: Parameter isBankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:10:52: Parameter budget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:16:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:20:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:20:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:24:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:28:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:28:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:32:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:36:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:36:27: Parameter budget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:40:5: Class 'OutConsumer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutConsumer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:42:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:43:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:44:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/OutConsumer.java:45:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:8:23: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:8:24: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:10:21: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:10:29: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:10:48: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:16:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:20:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:20:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:24:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:28:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:28:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:32:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:36:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:36:34: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:40:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:42:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:43:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:44:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/consumer/Consumer.java:45:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:14:23: Parameter consumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:14:57: Parameter distributors should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:19:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:23:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'setConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'setConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:23:30: Parameter consumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:27:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:31:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:31:33: Parameter distributors should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:35:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:37:30: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:38:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/output/OutputData.java:39:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:18:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:20:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:29: Line is longer than 100 characters (found 173). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:30: Line is longer than 100 characters (found 161). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:30:124: '0.2' is a magic number. [MagicNumber]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:39: Line is longer than 100 characters (found 180). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:71: Line is longer than 100 characters (found 184). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:100: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:109: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:113: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:125:32: Parameter c1 should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/Main.java:125:52: Parameter c2 should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:15: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:15:22: Parameter numberOfTurns should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:15:41: Parameter initialData should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:15:63: Parameter monthlyUpdates should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:21:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getNumberOfTurns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getNumberOfTurns' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:25:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setNumberOfTurns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setNumberOfTurns' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:25:34: Parameter numberOfTurns should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:29:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:33:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:33:32: Parameter initialData should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:37:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getMonthlyUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getMonthlyUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:41:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setMonthlyUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setMonthlyUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:41:35: Parameter monthlyUpdates should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:45:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:47:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:48:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:49:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/input/InputData.java:50:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:8:14: Name 'initData' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:12:23: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:12:24: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:14:21: Parameter consumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:14:52: Parameter distributors should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:19:5: Class 'initData' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'initData' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:23:5: Class 'initData' looks like designed for extension (can be subclassed), but the method 'setConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'initData' final or making the method 'setConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:23:30: Parameter consumers should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:27:5: Class 'initData' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'initData' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:31:5: Class 'initData' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'initData' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:31:33: Parameter distributors should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:35:5: Class 'initData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'initData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:37:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:38:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/init/initData.java:39:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:10:21: Parameter consumerID should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:10:37: Parameter price should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:10:48: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:16:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getConsumerID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getConsumerID' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:20:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setConsumerID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setConsumerID' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:20:31: Parameter consumerID should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:24:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:28:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:28:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:32:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:36:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:36:43: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:40:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:42:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:43:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:44:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/contract/Contract.java:45:70: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:10:19: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:10:27: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:10:51: Parameter productionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:16:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:20:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:20:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:24:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:28:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:28:39: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:32:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:36:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:36:35: Parameter productionCost should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:40:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:42:30: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:43:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:44:62: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/ProjectPOO/teme/proiect-etapa1/./src/change/Change.java:45:54: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 268 errors.
